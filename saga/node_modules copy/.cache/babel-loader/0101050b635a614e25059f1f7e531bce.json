{"ast":null,"code":"var _jsxFileName = \"c:\\\\homework_react\\\\homework\\\\src\\\\components\\\\Services\\\\Services.jsx\";\nimport React from 'react';\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { fetchServicesRequest } from '../../actions/actionCreators';\nimport { Message } from '../Message/Message';\n\nfunction Services(props) {\n  const {\n    items = [],\n    hasError\n  } = useSelector(state => state.services);\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(fetchServicesRequest());\n    return () => {};\n  }, []);\n\n  const handleRepeate = () => {\n    dispatch(fetchServicesRequest());\n  };\n\n  return hasError && /*#__PURE__*/React.createElement(Message, {\n    message: hasError,\n    isHide: !hasError,\n    handleRepeate: handleRepeate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }\n  }) || /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, items.map(item => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: `/services/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"item-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }, item.name)), \":\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"item-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, item.price));\n  }));\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    services: {\n      items,\n      isLoading,\n      hasError\n    }\n  } = state;\n  return { ...ownProps,\n    items,\n    isLoading,\n    hasError\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return { ...ownProps\n  };\n};\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(Services);\nexport { ConnectedComponent as Services };","map":{"version":3,"sources":["c:/homework_react/homework/src/components/Services/Services.jsx"],"names":["React","connect","useSelector","useDispatch","fetchServicesRequest","Message","Services","props","items","hasError","state","services","dispatch","useEffect","handleRepeate","map","item","id","name","price","mapStateToProps","ownProps","isLoading","mapDispatchToProps","ConnectedComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA6BC,WAA7B,QAA8C,aAA9C;AACA,SAAQC,oBAAR,QAAmC,8BAAnC;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEpB,QAAM;AACFC,IAAAA,KAAK,GAAG,EADN;AAEFC,IAAAA;AAFE,MAGFP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAHf;AAKA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAH,EAAAA,KAAK,CAACa,SAAN,CAAiB,MAAM;AACnBD,IAAAA,QAAQ,CAACR,oBAAoB,EAArB,CAAR;AACA,WAAO,MAAM,CAAE,CAAf;AACH,GAHD,EAGE,EAHF;;AAKA,QAAMU,aAAa,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAACR,oBAAoB,EAArB,CAAR;AACH,GAFD;;AAIA,SACMK,QAAD,iBAAc,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,QAAlB;AAA4B,IAAA,MAAM,EAAE,CAACA,QAArC;AAA+C,IAAA,aAAa,EAAEK,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,iBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIN,KAAK,CAACO,GAAN,CAAYC,IAAD,IAAU;AACjB,wBACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,IAAI,EAAG,aAAYD,IAAI,CAACC,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BD,IAAI,CAACE,IAAlC,CADJ,CADJ,oBAKI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BF,IAAI,CAACG,KAAnC,CALJ,CADJ;AASH,GAVD,CAHJ,CAHR;AAsBH;;AAED,MAAMC,eAAe,GAAG,CAACV,KAAD,EAAOW,QAAP,KAAoB;AACxC,QAAM;AAACV,IAAAA,QAAQ,EAAE;AAACH,MAAAA,KAAD;AAAQc,MAAAA,SAAR;AAAmBb,MAAAA;AAAnB;AAAX,MAA2CC,KAAjD;AACA,SAAO,EAAC,GAAGW,QAAJ;AAAcb,IAAAA,KAAd;AAAqBc,IAAAA,SAArB;AAAgCb,IAAAA;AAAhC,GAAP;AACH,CAHD;;AAKA,MAAMc,kBAAkB,GAAG,CAACX,QAAD,EAAWS,QAAX,KAAwB;AAC/C,SAAO,EACH,GAAGA;AADA,GAAP;AAGH,CAJD;;AAMA,MAAMG,kBAAkB,GAAGvB,OAAO,CAACmB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CjB,QAA5C,CAA3B;AACA,SAAQkB,kBAAkB,IAAIlB,QAA9B","sourcesContent":["import React from 'react';\r\nimport {connect, useSelector,useDispatch} from'react-redux';\r\nimport {fetchServicesRequest} from '../../actions/actionCreators';\r\nimport {Message} from '../Message/Message';\r\n\r\n\r\nfunction Services(props){\r\n\r\n    const {\r\n        items = [], \r\n        hasError,\r\n    } = useSelector(state => state.services);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect( () => {\r\n        dispatch(fetchServicesRequest());\r\n        return () => {};\r\n    },[]);\r\n\r\n    const handleRepeate = () => {\r\n        dispatch(fetchServicesRequest());\r\n    };\r\n    \r\n    return (\r\n        ((hasError) && <Message message={hasError} isHide={!hasError} handleRepeate={handleRepeate} />) || \r\n        (\r\n            <ul>\r\n            {\r\n                \r\n                items.map( (item) => {\r\n                    return (\r\n                        <li key={item.id}>\r\n                            <a href={`/services/${item.id}`}>\r\n                                <span className=\"item-text\">{item.name}</span>\r\n                            </a>\r\n                            :\r\n                            <span className=\"item-price\">{item.price}</span>\r\n                        </li>\r\n                    )\r\n                } )\r\n            }\r\n            </ul>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    const {services: {items, isLoading, hasError}} = state;\r\n    return {...ownProps, items, isLoading, hasError};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        ...ownProps,\r\n    };\r\n};\r\n\r\nconst ConnectedComponent = connect(mapStateToProps,mapDispatchToProps)(Services);\r\nexport {ConnectedComponent as Services};"]},"metadata":{},"sourceType":"module"}